# =====================================================
# ETMS Application Configuration Template
# Employment Training Management System
# =====================================================
# INSTRUCTIONS:
# 1. Copy this file to 'application.properties'
# 2. Update the values below with your local settings
# 3. Never commit application.properties to Git (it's in .gitignore)
# =====================================================

# Application Information
spring.application.name=Employment Training Management System
server.port=8080

# =====================================================
# Database Configuration (PostgreSQL)
# =====================================================
# TODO: Update these with your local PostgreSQL credentials
spring.datasource.url=jdbc:postgresql://localhost:5432/etms
spring.datasource.username=YOUR_DB_USERNAME
spring.datasource.password=YOUR_DB_PASSWORD
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA/Hibernate Configuration
# IMPORTANT: validate = don't modify schema, we designed it manually!
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# PostgreSQL Schema Configuration
# Use our custom 'etms' schema
spring.jpa.properties.hibernate.default_schema=etms

# Enable JDBC batch processing for better performance
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# SQL Comments in logs (helpful for debugging)
spring.jpa.properties.hibernate.use_sql_comments=true

# =====================================================
# File Upload Configuration
# =====================================================
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# File Storage Configuration
# TODO: Update upload directory path if needed
file.upload-dir=uploads/
file.max-size=52428800

# =====================================================
# Security Configuration
# =====================================================
# Session timeout (30 minutes)
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false

# =====================================================
# Logging Configuration
# =====================================================
# Adjust log levels for development vs production
logging.level.com.activwork.etms=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =====================================================
# Thymeleaf Configuration
# =====================================================
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

# =====================================================
# Production Notes
# =====================================================
# For production deployment:
# 1. Set spring.jpa.show-sql=false
# 2. Set logging levels to INFO or WARN
# 3. Set spring.thymeleaf.cache=true
# 4. Use environment variables for credentials
# 5. Set server.servlet.session.cookie.secure=true (HTTPS only)

